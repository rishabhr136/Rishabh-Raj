{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled7.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyOc0nAlOQHWbA9x3LQpzGrm",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/rishabhr136/Rishabh-Raj/blob/master/Image%20prediction%20by%20Keras\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BFonW7vBcLju"
      },
      "source": [
        "import tensorflow  as tf\r\n"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "23ysKEcmcPnC",
        "outputId": "0399c6b6-453c-4565-9aba-3f3c18ec27ea"
      },
      "source": [
        "node1 = tf.constant(3.0,tf.float32)\r\n",
        "node2 = tf.constant(7.0)\r\n",
        "print(node1,node2)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "tf.Tensor(3.0, shape=(), dtype=float32) tf.Tensor(7.0, shape=(), dtype=float32)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bfb_dqM5csJ5",
        "outputId": "ac62c592-ccad-45f3-ed03-670c2ebee264"
      },
      "source": [
        "print(tf.subtract(node2,node1))"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "tf.Tensor(4.0, shape=(), dtype=float32)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oTNUMFH4d4qE"
      },
      "source": [
        " import numpy as np\r\n",
        " import pandas as pd\r\n",
        " import matplotlib.pyplot as plt\r\n",
        " import keras"
      ],
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zyuuC1Mcocfg"
      },
      "source": [
        "(x_train, y_train), (x_test, y_test) = keras.datasets.fashion_mnist.load_data()"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_LmaLkpmo3jj",
        "outputId": "56ee8d69-c8d0-49fd-e415-2b8bbc004270"
      },
      "source": [
        "y_train.shape"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(60000,)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PsXaQcAcpW1D",
        "outputId": "8ef83aee-f601-44a4-97b7-670d07426af1"
      },
      "source": [
        "x_train.shape"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(60000, 28, 28)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PMcRQ069pZAm",
        "outputId": "e55dae0b-5870-44cc-fbda-3ee3e4050ee7"
      },
      "source": [
        "x_test.shape, y_test.shape"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((10000, 28, 28), (10000,))"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QUTs_tIlpqjj",
        "outputId": "067457cf-d59f-478b-af53-de19e04281fe"
      },
      "source": [
        "x_train[0]"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0,   0],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0,   0],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0,   0],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,\n",
              "          0,   0,  13,  73,   0,   0,   1,   4,   0,   0,   0,   0,   1,\n",
              "          1,   0],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   3,\n",
              "          0,  36, 136, 127,  62,  54,   0,   0,   0,   1,   3,   4,   0,\n",
              "          0,   3],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   6,\n",
              "          0, 102, 204, 176, 134, 144, 123,  23,   0,   0,   0,   0,  12,\n",
              "         10,   0],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0, 155, 236, 207, 178, 107, 156, 161, 109,  64,  23,  77, 130,\n",
              "         72,  15],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,\n",
              "         69, 207, 223, 218, 216, 216, 163, 127, 121, 122, 146, 141,  88,\n",
              "        172,  66],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   1,   1,   0,\n",
              "        200, 232, 232, 233, 229, 223, 223, 215, 213, 164, 127, 123, 196,\n",
              "        229,   0],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "        183, 225, 216, 223, 228, 235, 227, 224, 222, 224, 221, 223, 245,\n",
              "        173,   0],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "        193, 228, 218, 213, 198, 180, 212, 210, 211, 213, 223, 220, 243,\n",
              "        202,   0],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   3,   0,  12,\n",
              "        219, 220, 212, 218, 192, 169, 227, 208, 218, 224, 212, 226, 197,\n",
              "        209,  52],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   6,   0,  99,\n",
              "        244, 222, 220, 218, 203, 198, 221, 215, 213, 222, 220, 245, 119,\n",
              "        167,  56],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   4,   0,   0,  55,\n",
              "        236, 228, 230, 228, 240, 232, 213, 218, 223, 234, 217, 217, 209,\n",
              "         92,   0],\n",
              "       [  0,   0,   1,   4,   6,   7,   2,   0,   0,   0,   0,   0, 237,\n",
              "        226, 217, 223, 222, 219, 222, 221, 216, 223, 229, 215, 218, 255,\n",
              "         77,   0],\n",
              "       [  0,   3,   0,   0,   0,   0,   0,   0,   0,  62, 145, 204, 228,\n",
              "        207, 213, 221, 218, 208, 211, 218, 224, 223, 219, 215, 224, 244,\n",
              "        159,   0],\n",
              "       [  0,   0,   0,   0,  18,  44,  82, 107, 189, 228, 220, 222, 217,\n",
              "        226, 200, 205, 211, 230, 224, 234, 176, 188, 250, 248, 233, 238,\n",
              "        215,   0],\n",
              "       [  0,  57, 187, 208, 224, 221, 224, 208, 204, 214, 208, 209, 200,\n",
              "        159, 245, 193, 206, 223, 255, 255, 221, 234, 221, 211, 220, 232,\n",
              "        246,   0],\n",
              "       [  3, 202, 228, 224, 221, 211, 211, 214, 205, 205, 205, 220, 240,\n",
              "         80, 150, 255, 229, 221, 188, 154, 191, 210, 204, 209, 222, 228,\n",
              "        225,   0],\n",
              "       [ 98, 233, 198, 210, 222, 229, 229, 234, 249, 220, 194, 215, 217,\n",
              "        241,  65,  73, 106, 117, 168, 219, 221, 215, 217, 223, 223, 224,\n",
              "        229,  29],\n",
              "       [ 75, 204, 212, 204, 193, 205, 211, 225, 216, 185, 197, 206, 198,\n",
              "        213, 240, 195, 227, 245, 239, 223, 218, 212, 209, 222, 220, 221,\n",
              "        230,  67],\n",
              "       [ 48, 203, 183, 194, 213, 197, 185, 190, 194, 192, 202, 214, 219,\n",
              "        221, 220, 236, 225, 216, 199, 206, 186, 181, 177, 172, 181, 205,\n",
              "        206, 115],\n",
              "       [  0, 122, 219, 193, 179, 171, 183, 196, 204, 210, 213, 207, 211,\n",
              "        210, 200, 196, 194, 191, 195, 191, 198, 192, 176, 156, 167, 177,\n",
              "        210,  92],\n",
              "       [  0,   0,  74, 189, 212, 191, 175, 172, 175, 181, 185, 188, 189,\n",
              "        188, 193, 198, 204, 209, 210, 210, 211, 188, 188, 194, 192, 216,\n",
              "        170,   0],\n",
              "       [  2,   0,   0,   0,  66, 200, 222, 237, 239, 242, 246, 243, 244,\n",
              "        221, 220, 193, 191, 179, 182, 182, 181, 176, 166, 168,  99,  58,\n",
              "          0,   0],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,  40,  61,  44,  72,  41,  35,\n",
              "          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0,   0],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0,   0],\n",
              "       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
              "          0,   0]], dtype=uint8)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sBDP1k22pv6Y",
        "outputId": "22025b71-9145-460b-c33b-0488868fa4c0"
      },
      "source": [
        "y_train[0]"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "9"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 901
        },
        "id": "7J5DgvdJqdlJ",
        "outputId": "0c8ac0fb-2ade-44d4-c5cd-28ea2e06c61c"
      },
      "source": [
        "plt.figure(figsize=(20,16))\r\n",
        "for i in range(25):\r\n",
        "  plt.subplot(5,5,i+1)\r\n",
        "  plt.imshow(x_train[i+1],cmap=\"Greys\")\r\n",
        "  plt.axis(\"off\")\r\n",
        "  plt.title(class=\"l\")\r\n",
        "\r\n"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1152 with 25 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r_HQIIC1tb8u",
        "outputId": "46c7dba0-055b-4e2f-a82e-989b402a1f1c"
      },
      "source": [
        "x_train = x_train/255\r\n",
        "x_test = x_test/255\r\n",
        "x_train[0]"
      ],
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        9.27468349e-13, 0.00000000e+00, 0.00000000e+00, 1.20570885e-11,\n",
              "        6.77051895e-11, 0.00000000e+00, 0.00000000e+00, 9.27468349e-13,\n",
              "        3.70987340e-12, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 9.27468349e-13, 9.27468349e-13, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        2.78240505e-12, 0.00000000e+00, 3.33888606e-11, 1.26135696e-10,\n",
              "        1.17788480e-10, 5.75030377e-11, 5.00832909e-11, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 9.27468349e-13, 2.78240505e-12,\n",
              "        3.70987340e-12, 0.00000000e+00, 0.00000000e+00, 2.78240505e-12],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        5.56481010e-12, 0.00000000e+00, 9.46017716e-11, 1.89203543e-10,\n",
              "        1.63234429e-10, 1.24280759e-10, 1.33555442e-10, 1.14078607e-10,\n",
              "        2.13317720e-11, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 1.11296202e-11, 9.27468349e-12, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 1.43757594e-10, 2.18882530e-10,\n",
              "        1.91985948e-10, 1.65089366e-10, 9.92391134e-11, 1.44685062e-10,\n",
              "        1.49322404e-10, 1.01094050e-10, 5.93579744e-11, 2.13317720e-11,\n",
              "        7.14150629e-11, 1.20570885e-10, 6.67777211e-11, 1.39120252e-11],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 9.27468349e-13,\n",
              "        0.00000000e+00, 6.39953161e-11, 1.91985948e-10, 2.06825442e-10,\n",
              "        2.02188100e-10, 2.00333163e-10, 2.00333163e-10, 1.51177341e-10,\n",
              "        1.17788480e-10, 1.12223670e-10, 1.13151139e-10, 1.35410379e-10,\n",
              "        1.30773037e-10, 8.16172147e-11, 1.59524556e-10, 6.12129111e-11],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 9.27468349e-13, 9.27468349e-13, 9.27468349e-13,\n",
              "        0.00000000e+00, 1.85493670e-10, 2.15172657e-10, 2.15172657e-10,\n",
              "        2.16100125e-10, 2.12390252e-10, 2.06825442e-10, 2.06825442e-10,\n",
              "        1.99405695e-10, 1.97550758e-10, 1.52104809e-10, 1.17788480e-10,\n",
              "        1.14078607e-10, 1.81783796e-10, 2.12390252e-10, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 1.69726708e-10, 2.08680379e-10, 2.00333163e-10,\n",
              "        2.06825442e-10, 2.11462784e-10, 2.17955062e-10, 2.10535315e-10,\n",
              "        2.07752910e-10, 2.05897974e-10, 2.07752910e-10, 2.04970505e-10,\n",
              "        2.06825442e-10, 2.27229746e-10, 1.60452024e-10, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 1.79001391e-10, 2.11462784e-10, 2.02188100e-10,\n",
              "        1.97550758e-10, 1.83638733e-10, 1.66944303e-10, 1.96623290e-10,\n",
              "        1.94768353e-10, 1.95695822e-10, 1.97550758e-10, 2.06825442e-10,\n",
              "        2.04043037e-10, 2.25374809e-10, 1.87348607e-10, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 9.27468349e-13, 2.78240505e-12, 0.00000000e+00,\n",
              "        1.11296202e-11, 2.03115568e-10, 2.04043037e-10, 1.96623290e-10,\n",
              "        2.02188100e-10, 1.78073923e-10, 1.56742151e-10, 2.10535315e-10,\n",
              "        1.92913417e-10, 2.02188100e-10, 2.07752910e-10, 1.96623290e-10,\n",
              "        2.09607847e-10, 1.82711265e-10, 1.93840885e-10, 4.82283542e-11],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 5.56481010e-12, 0.00000000e+00,\n",
              "        9.18193666e-11, 2.26302277e-10, 2.05897974e-10, 2.04043037e-10,\n",
              "        2.02188100e-10, 1.88276075e-10, 1.83638733e-10, 2.04970505e-10,\n",
              "        1.99405695e-10, 1.97550758e-10, 2.05897974e-10, 2.04043037e-10,\n",
              "        2.27229746e-10, 1.10368734e-10, 1.54887214e-10, 5.19382276e-11],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 3.70987340e-12, 0.00000000e+00, 0.00000000e+00,\n",
              "        5.10107592e-11, 2.18882530e-10, 2.11462784e-10, 2.13317720e-10,\n",
              "        2.11462784e-10, 2.22592404e-10, 2.15172657e-10, 1.97550758e-10,\n",
              "        2.02188100e-10, 2.06825442e-10, 2.17027594e-10, 2.01260632e-10,\n",
              "        2.01260632e-10, 1.93840885e-10, 8.53270881e-11, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 9.27468349e-13, 3.70987340e-12,\n",
              "        5.56481010e-12, 6.49227844e-12, 1.85493670e-12, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        2.19809999e-10, 2.09607847e-10, 2.01260632e-10, 2.06825442e-10,\n",
              "        2.05897974e-10, 2.03115568e-10, 2.05897974e-10, 2.04970505e-10,\n",
              "        2.00333163e-10, 2.06825442e-10, 2.12390252e-10, 1.99405695e-10,\n",
              "        2.02188100e-10, 2.36504429e-10, 7.14150629e-11, 0.00000000e+00],\n",
              "       [0.00000000e+00, 2.78240505e-12, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 5.75030377e-11, 1.34482911e-10, 1.89203543e-10,\n",
              "        2.11462784e-10, 1.91985948e-10, 1.97550758e-10, 2.04970505e-10,\n",
              "        2.02188100e-10, 1.92913417e-10, 1.95695822e-10, 2.02188100e-10,\n",
              "        2.07752910e-10, 2.06825442e-10, 2.03115568e-10, 1.99405695e-10,\n",
              "        2.07752910e-10, 2.26302277e-10, 1.47467468e-10, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        1.66944303e-11, 4.08086074e-11, 7.60524046e-11, 9.92391134e-11,\n",
              "        1.75291518e-10, 2.11462784e-10, 2.04043037e-10, 2.05897974e-10,\n",
              "        2.01260632e-10, 2.09607847e-10, 1.85493670e-10, 1.90131012e-10,\n",
              "        1.95695822e-10, 2.13317720e-10, 2.07752910e-10, 2.17027594e-10,\n",
              "        1.63234429e-10, 1.74364050e-10, 2.31867087e-10, 2.30012151e-10,\n",
              "        2.16100125e-10, 2.20737467e-10, 1.99405695e-10, 0.00000000e+00],\n",
              "       [0.00000000e+00, 5.28656959e-11, 1.73436581e-10, 1.92913417e-10,\n",
              "        2.07752910e-10, 2.04970505e-10, 2.07752910e-10, 1.92913417e-10,\n",
              "        1.89203543e-10, 1.98478227e-10, 1.92913417e-10, 1.93840885e-10,\n",
              "        1.85493670e-10, 1.47467468e-10, 2.27229746e-10, 1.79001391e-10,\n",
              "        1.91058480e-10, 2.06825442e-10, 2.36504429e-10, 2.36504429e-10,\n",
              "        2.04970505e-10, 2.17027594e-10, 2.04970505e-10, 1.95695822e-10,\n",
              "        2.04043037e-10, 2.15172657e-10, 2.28157214e-10, 0.00000000e+00],\n",
              "       [2.78240505e-12, 1.87348607e-10, 2.11462784e-10, 2.07752910e-10,\n",
              "        2.04970505e-10, 1.95695822e-10, 1.95695822e-10, 1.98478227e-10,\n",
              "        1.90131012e-10, 1.90131012e-10, 1.90131012e-10, 2.04043037e-10,\n",
              "        2.22592404e-10, 7.41974679e-11, 1.39120252e-10, 2.36504429e-10,\n",
              "        2.12390252e-10, 2.04970505e-10, 1.74364050e-10, 1.42830126e-10,\n",
              "        1.77146455e-10, 1.94768353e-10, 1.89203543e-10, 1.93840885e-10,\n",
              "        2.05897974e-10, 2.11462784e-10, 2.08680379e-10, 0.00000000e+00],\n",
              "       [9.08918982e-11, 2.16100125e-10, 1.83638733e-10, 1.94768353e-10,\n",
              "        2.05897974e-10, 2.12390252e-10, 2.12390252e-10, 2.17027594e-10,\n",
              "        2.30939619e-10, 2.04043037e-10, 1.79928860e-10, 1.99405695e-10,\n",
              "        2.01260632e-10, 2.23519872e-10, 6.02854427e-11, 6.77051895e-11,\n",
              "        9.83116450e-11, 1.08513797e-10, 1.55814683e-10, 2.03115568e-10,\n",
              "        2.04970505e-10, 1.99405695e-10, 2.01260632e-10, 2.06825442e-10,\n",
              "        2.06825442e-10, 2.07752910e-10, 2.12390252e-10, 2.68965821e-11],\n",
              "       [6.95601262e-11, 1.89203543e-10, 1.96623290e-10, 1.89203543e-10,\n",
              "        1.79001391e-10, 1.90131012e-10, 1.95695822e-10, 2.08680379e-10,\n",
              "        2.00333163e-10, 1.71581645e-10, 1.82711265e-10, 1.91058480e-10,\n",
              "        1.83638733e-10, 1.97550758e-10, 2.22592404e-10, 1.80856328e-10,\n",
              "        2.10535315e-10, 2.27229746e-10, 2.21664935e-10, 2.06825442e-10,\n",
              "        2.02188100e-10, 1.96623290e-10, 1.93840885e-10, 2.05897974e-10,\n",
              "        2.04043037e-10, 2.04970505e-10, 2.13317720e-10, 6.21403794e-11],\n",
              "       [4.45184808e-11, 1.88276075e-10, 1.69726708e-10, 1.79928860e-10,\n",
              "        1.97550758e-10, 1.82711265e-10, 1.71581645e-10, 1.76218986e-10,\n",
              "        1.79928860e-10, 1.78073923e-10, 1.87348607e-10, 1.98478227e-10,\n",
              "        2.03115568e-10, 2.04970505e-10, 2.04043037e-10, 2.18882530e-10,\n",
              "        2.08680379e-10, 2.00333163e-10, 1.84566202e-10, 1.91058480e-10,\n",
              "        1.72509113e-10, 1.67871771e-10, 1.64161898e-10, 1.59524556e-10,\n",
              "        1.67871771e-10, 1.90131012e-10, 1.91058480e-10, 1.06658860e-10],\n",
              "       [0.00000000e+00, 1.13151139e-10, 2.03115568e-10, 1.79001391e-10,\n",
              "        1.66016835e-10, 1.58597088e-10, 1.69726708e-10, 1.81783796e-10,\n",
              "        1.89203543e-10, 1.94768353e-10, 1.97550758e-10, 1.91985948e-10,\n",
              "        1.95695822e-10, 1.94768353e-10, 1.85493670e-10, 1.81783796e-10,\n",
              "        1.79928860e-10, 1.77146455e-10, 1.80856328e-10, 1.77146455e-10,\n",
              "        1.83638733e-10, 1.78073923e-10, 1.63234429e-10, 1.44685062e-10,\n",
              "        1.54887214e-10, 1.64161898e-10, 1.94768353e-10, 8.53270881e-11],\n",
              "       [0.00000000e+00, 0.00000000e+00, 6.86326578e-11, 1.75291518e-10,\n",
              "        1.96623290e-10, 1.77146455e-10, 1.62306961e-10, 1.59524556e-10,\n",
              "        1.62306961e-10, 1.67871771e-10, 1.71581645e-10, 1.74364050e-10,\n",
              "        1.75291518e-10, 1.74364050e-10, 1.79001391e-10, 1.83638733e-10,\n",
              "        1.89203543e-10, 1.93840885e-10, 1.94768353e-10, 1.94768353e-10,\n",
              "        1.95695822e-10, 1.74364050e-10, 1.74364050e-10, 1.79928860e-10,\n",
              "        1.78073923e-10, 2.00333163e-10, 1.57669619e-10, 0.00000000e+00],\n",
              "       [1.85493670e-12, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        6.12129111e-11, 1.85493670e-10, 2.05897974e-10, 2.19809999e-10,\n",
              "        2.21664935e-10, 2.24447341e-10, 2.28157214e-10, 2.25374809e-10,\n",
              "        2.26302277e-10, 2.04970505e-10, 2.04043037e-10, 1.79001391e-10,\n",
              "        1.77146455e-10, 1.66016835e-10, 1.68799240e-10, 1.68799240e-10,\n",
              "        1.67871771e-10, 1.63234429e-10, 1.53959746e-10, 1.55814683e-10,\n",
              "        9.18193666e-11, 5.37931643e-11, 0.00000000e+00, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 3.70987340e-11,\n",
              "        5.65755693e-11, 4.08086074e-11, 6.67777211e-11, 3.80262023e-11,\n",
              "        3.24613922e-11, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],\n",
              "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
              "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "w14FnspX2YXm"
      },
      "source": [
        "model = keras.models.Sequential([\r\n",
        "                         keras.layers.Flatten(input_shape=[28,28]),\r\n",
        "                         keras.layers.Dense(units=32,activation=\"relu\"),\r\n",
        "                         keras.layers.Dense(units=10,activation=\"softmax\")\r\n",
        "])"
      ],
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IBNW6X7z3khV",
        "outputId": "d400a29e-34a4-4aa0-b9c4-b3e85faa12da"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "flatten (Flatten)            (None, 784)               0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 32)                25120     \n",
            "_________________________________________________________________\n",
            "dense_1 (Dense)              (None, 10)                330       \n",
            "=================================================================\n",
            "Total params: 25,450\n",
            "Trainable params: 25,450\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dhuslt__36YL"
      },
      "source": [
        "model.compile(optimizer=\"adam\",loss=\"sparse_categorical_crossentropy\",metrics=[\"accuracy\"])"
      ],
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "y3Ms60nw7ATN",
        "outputId": "7a1a2e3c-dead-4a5d-9631-d15e4a476c31"
      },
      "source": [
        "model.fit(x_train,y_train,epochs=3)"
      ],
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/3\n",
            "1875/1875 [==============================] - 4s 2ms/step - loss: 2.3028 - accuracy: 0.1013\n",
            "Epoch 2/3\n",
            "1875/1875 [==============================] - 3s 2ms/step - loss: 2.3027 - accuracy: 0.0993\n",
            "Epoch 3/3\n",
            "1875/1875 [==============================] - 3s 2ms/step - loss: 2.3028 - accuracy: 0.0979\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tensorflow.python.keras.callbacks.History at 0x7fd0e97364e0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WZyKIzF77F2W",
        "outputId": "f08bcdf9-4ace-4b59-95d3-bae3579faca3"
      },
      "source": [
        "model.evaluate(x_test,y_test)"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "313/313 [==============================] - 0s 1ms/step - loss: 2.3026 - accuracy: 0.1000\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[2.302605390548706, 0.10000000149011612]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PLp3w0Rc7bF8",
        "outputId": "ca37cc57-28a6-4511-bd67-3ed4d3b2b91f"
      },
      "source": [
        "y_pred = model.predict(x_test)\r\n",
        "y_pred[0].round(3)"
      ],
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.099, 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.101, 0.1  , 0.099,\n",
              "       0.1  ], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lMvWiQ2w7wdB"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}